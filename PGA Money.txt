{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "cdd2cd64-1847-4d4c-b9db-49d3b521e1c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RANK THIS WEEK</th>\n",
       "      <th>\\n                                RANK LAST WEEK</th>\n",
       "      <th>PLAYER NAME</th>\n",
       "      <th>EVENTS</th>\n",
       "      <th>MONEY</th>\n",
       "      <th>YTD VICTORIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>\\n        1</td>\n",
       "      <td>\\n        1</td>\n",
       "      <td>\\nHideki Matsuyama\\n</td>\n",
       "      <td>9</td>\n",
       "      <td>$3,897,233</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>\\n        2</td>\n",
       "      <td>\\n        2</td>\n",
       "      <td>\\nTom Hoge\\n</td>\n",
       "      <td>14</td>\n",
       "      <td>$3,208,340</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>\\n        3</td>\n",
       "      <td>\\n        3</td>\n",
       "      <td>\\nScottie Scheffler\\n</td>\n",
       "      <td>9</td>\n",
       "      <td>$3,091,814</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>\\n        4</td>\n",
       "      <td>\\n        4</td>\n",
       "      <td>\\nJoaquin Niemann\\n</td>\n",
       "      <td>9</td>\n",
       "      <td>$2,822,257</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>\\n        5</td>\n",
       "      <td>\\n        5</td>\n",
       "      <td>\\nCollin Morikawa\\n</td>\n",
       "      <td>4</td>\n",
       "      <td>$2,666,322</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>\\n        T231</td>\n",
       "      <td>\\n        T229</td>\n",
       "      <td>\\nBen Crane\\n</td>\n",
       "      <td>3</td>\n",
       "      <td>$13,650</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>\\n        T231</td>\n",
       "      <td>\\n        T229</td>\n",
       "      <td>\\nD.A. Points\\n</td>\n",
       "      <td>2</td>\n",
       "      <td>$13,650</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>\\n        T231</td>\n",
       "      <td>\\n        T229</td>\n",
       "      <td>\\nJohn Senden\\n</td>\n",
       "      <td>2</td>\n",
       "      <td>$13,650</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>\\n        234</td>\n",
       "      <td>\\n        232</td>\n",
       "      <td>\\nArjun Atwal\\n</td>\n",
       "      <td>1</td>\n",
       "      <td>$13,195</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>\\n        235</td>\n",
       "      <td>\\n        233</td>\n",
       "      <td>\\nJohn Merrick\\n</td>\n",
       "      <td>2</td>\n",
       "      <td>$12,805</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>235 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     RANK THIS WEEK \\n                                RANK LAST WEEK  \\\n",
       "0       \\n        1                                      \\n        1   \n",
       "1       \\n        2                                      \\n        2   \n",
       "2       \\n        3                                      \\n        3   \n",
       "3       \\n        4                                      \\n        4   \n",
       "4       \\n        5                                      \\n        5   \n",
       "..              ...                                              ...   \n",
       "230  \\n        T231                                   \\n        T229   \n",
       "231  \\n        T231                                   \\n        T229   \n",
       "232  \\n        T231                                   \\n        T229   \n",
       "233   \\n        234                                    \\n        232   \n",
       "234   \\n        235                                    \\n        233   \n",
       "\n",
       "               PLAYER NAME EVENTS       MONEY YTD VICTORIES  \n",
       "0     \\nHideki Matsuyama\\n      9  $3,897,233             2  \n",
       "1             \\nTom Hoge\\n     14  $3,208,340             1  \n",
       "2    \\nScottie Scheffler\\n      9  $3,091,814             1  \n",
       "3      \\nJoaquin Niemann\\n      9  $2,822,257             1  \n",
       "4      \\nCollin Morikawa\\n      4  $2,666,322                \n",
       "..                     ...    ...         ...           ...  \n",
       "230          \\nBen Crane\\n      3     $13,650                \n",
       "231        \\nD.A. Points\\n      2     $13,650                \n",
       "232        \\nJohn Senden\\n      2     $13,650                \n",
       "233        \\nArjun Atwal\\n      1     $13,195                \n",
       "234       \\nJohn Merrick\\n      2     $12,805                \n",
       "\n",
       "[235 rows x 6 columns]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#package imports\n",
    "from bs4 import BeautifulSoup \n",
    "import lxml\n",
    "import requests as request\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#access the url and assign\n",
    "url = 'https://www.pgatour.com/stats/stat.109.html'\n",
    "request.get(url)\n",
    "page = request.get(url)\n",
    "\n",
    "#use bs4 \n",
    "soup = BeautifulSoup(page.text, 'html')\n",
    "\n",
    "#find the table\n",
    "table_data = soup.find('table', class_ ='table-styled')\n",
    "\n",
    "#assign the headers\n",
    "headers = []\n",
    "for i in table_data.find_all('th'): #find the positions of the headers\n",
    "    title = i.text #convert to text\n",
    "    headers.append(title)\n",
    "\n",
    "df_2021 = pd.DataFrame(columns = headers)\n",
    "\n",
    "#grab the contents of the table\n",
    "for j in table_data.find_all('tr')[1:]:\n",
    "        row_data = j.find_all('td')\n",
    "        row = [tr.text for tr in row_data]\n",
    "        length = len(df_2021)\n",
    "        df_2021.loc[length] = row\n",
    "df_2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "9fc2835c-d5c3-414f-8469-0e443ea606c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['RANK THIS WEEK', '\\n                                RANK LAST WEEK',\n",
       "       'PLAYER NAME', 'EVENTS', 'MONEY', 'YTD VICTORIES'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_2021.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "bde5b390-d801-4e9b-afa6-0e41fe8f61cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RANK THIS WEEK</th>\n",
       "      <th>RANK LAST WEEK</th>\n",
       "      <th>PLAYER NAME</th>\n",
       "      <th>EVENTS</th>\n",
       "      <th>MONEY</th>\n",
       "      <th>YTD VICTORIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Hideki Matsuyama</td>\n",
       "      <td>9</td>\n",
       "      <td>$3,897,233</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Tom Hoge</td>\n",
       "      <td>14</td>\n",
       "      <td>$3,208,340</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>Scottie Scheffler</td>\n",
       "      <td>9</td>\n",
       "      <td>$3,091,814</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Joaquin Niemann</td>\n",
       "      <td>9</td>\n",
       "      <td>$2,822,257</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>Collin Morikawa</td>\n",
       "      <td>4</td>\n",
       "      <td>$2,666,322</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>T231</td>\n",
       "      <td>T229</td>\n",
       "      <td>Ben Crane</td>\n",
       "      <td>3</td>\n",
       "      <td>$13,650</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>T231</td>\n",
       "      <td>T229</td>\n",
       "      <td>D.A. Points</td>\n",
       "      <td>2</td>\n",
       "      <td>$13,650</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>T231</td>\n",
       "      <td>T229</td>\n",
       "      <td>John Senden</td>\n",
       "      <td>2</td>\n",
       "      <td>$13,650</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>234</td>\n",
       "      <td>232</td>\n",
       "      <td>Arjun Atwal</td>\n",
       "      <td>1</td>\n",
       "      <td>$13,195</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>235</td>\n",
       "      <td>233</td>\n",
       "      <td>John Merrick</td>\n",
       "      <td>2</td>\n",
       "      <td>$12,805</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>235 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    RANK THIS WEEK RANK LAST WEEK        PLAYER NAME EVENTS       MONEY  \\\n",
       "0                1              1   Hideki Matsuyama      9  $3,897,233   \n",
       "1                2              2           Tom Hoge     14  $3,208,340   \n",
       "2                3              3  Scottie Scheffler      9  $3,091,814   \n",
       "3                4              4    Joaquin Niemann      9  $2,822,257   \n",
       "4                5              5    Collin Morikawa      4  $2,666,322   \n",
       "..             ...            ...                ...    ...         ...   \n",
       "230           T231           T229          Ben Crane      3     $13,650   \n",
       "231           T231           T229        D.A. Points      2     $13,650   \n",
       "232           T231           T229        John Senden      2     $13,650   \n",
       "233            234            232        Arjun Atwal      1     $13,195   \n",
       "234            235            233       John Merrick      2     $12,805   \n",
       "\n",
       "    YTD VICTORIES  \n",
       "0               2  \n",
       "1               1  \n",
       "2               1  \n",
       "3               1  \n",
       "4                  \n",
       "..            ...  \n",
       "230                \n",
       "231                \n",
       "232                \n",
       "233                \n",
       "234                \n",
       "\n",
       "[235 rows x 6 columns]"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_2021.columns = [i.replace('\\n', '').replace(u'\\xa0', u' ').strip() for i in df_2021.columns]\n",
    "#df_2021['RANK THIS WEEK'].str.replace('\\n', '').str.replace('T', '')\n",
    "#df_2021['RANK THIS WEEK'] = df_2021['RANK THIS WEEK'].str.extract('(\\d+)')\n",
    "#cleaning each via a for loop\n",
    "for i in df_2021.columns:\n",
    "    df_2021[i] = df_2021[i].str.replace('\\n', '')\n",
    "    \n",
    "df_2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "489aea46-7290-490a-a583-dff3f2603c37",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-108-fa8c35a32d4b>:3: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will*not* be treated as literal strings when regex=True.\n",
      "  money = df_2021[\"MONEY\"].str.replace('$','')\n"
     ]
    }
   ],
   "source": [
    "#clean Player name \n",
    "player_name = df_2021['PLAYER NAME'].str.replace('\\n','')\n",
    "money = df_2021[\"MONEY\"].str.replace('$','')\n",
    "#convert distance from object to int\n",
    "#money = df_2021['MONEY']\n",
    "#money = pd.to_numeric(money)\n",
    "#convert distance from object to int\n",
    "#events = df_2021['EVENTS']\n",
    "#events = pd.to_numeric(events)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "f1c58f50-dc0e-41e1-bbd5-c71b6ef57a35",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-109-0bb630268e37>:1: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will*not* be treated as literal strings when regex=True.\n",
      "  df_2021[\"MONEY\"] = pd.to_numeric(df_2021[\"MONEY\"].str.replace('$','').str.replace(',',''))\n"
     ]
    }
   ],
   "source": [
    "df_2021[\"MONEY\"] = pd.to_numeric(df_2021[\"MONEY\"].str.replace('$','').str.replace(',',''))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "29e3bcec-5ec4-4d3f-ad9e-2c1d539a61e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_2021[\"MONEY\"] = df_2021[\"MONEY\"].str.replace('$','')\n",
    "#df_2021[\"MONEY\"] = df_2021[\"MONEY\"].str.replace(',','')\n",
    "\n",
    "#df_2021[\"MONEY\"] = pd.to_numeric(df_2021[\"MONEY\"])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "f6dc871f-ba74-4f90-9cf1-bc178be26f17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels = top_ten_players[\"PLAYER NAME\"]\n",
    "sizes = top_ten_players[\"MONEY\"]\n",
    "\n",
    "fig1, ax1 = plt.subplots()\n",
    "ax1.pie(sizes, labels=labels, autopct='%1.1f%%',\n",
    "        shadow=True, startangle=90)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "ff29fb77-c773-4276-b534-20c38ed992aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "top_ten_players=df_2021.sort_values([\"MONEY\"])[224:235]\n",
    "ax = top_ten_players.plot.bar(x='PLAYER NAME', y='MONEY', title= \"EARNINGS 2021\", rot=90)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5d16b57a-4d55-4353-bcf4-1a4a22a2291f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20125fff-3f9e-480c-878d-e60ccc31b2b3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f64b8dd9-4008-443d-a85a-ef4d42335409",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
